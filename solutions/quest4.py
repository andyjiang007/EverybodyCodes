###
# Quest 4
# 11/17/20240
###


def solve1(input):
    result = 0
    inputArray = [int(line) for line in input.split("\n") if line]
    minHeight = min(inputArray)
    for height in inputArray:
        result += height - minHeight
    return result


def solve2(input):
    result = 0
    return result


def solve3(input):
    inputArray = [int(line) for line in input.split("\n") if line]
    # Sort the array
    sorted_arr = sorted(inputArray)
    n = len(sorted_arr)

    # Calculate the median
    if n % 2 == 1:  # Odd length
        median = sorted_arr[n // 2]
    else:  # Even length
        median = (sorted_arr[n // 2 - 1] + sorted_arr[n // 2]) / 2

    # Check floor and ceiling of the median
    floor_median = int(median)  # Floor of median
    ceil_median = (
        int(median) + 1 if median != int(median) else int(median)
    )  # Ceiling of median if it's not an integer
    # Compute the sum of absolute differences for both candidates
    floor_diff_sum = sum(abs(x - floor_median) for x in inputArray)
    ceil_diff_sum = sum(abs(x - ceil_median) for x in inputArray)

    if floor_diff_sum <= ceil_diff_sum:
        return floor_diff_sum
    else:
        return ceil_diff_sum


def main():
    inputExample = """
3
4
7
8
"""
    input = """
10
17
11
12
16
7
17
17
17
18
18
"""
    print("Part 1 answer:")
    print(solve1(input))
    # inputExample = """"""
    input = """
2754
2051
6996
3293
9288
5389
2155
3964
4209
7327
3294
4547
9465
1742
9398
7268
7994
9277
1070
9722
5436
5289
5196
4582
2425
5349
9775
7054
4886
2995
8933
9025
6040
6763
5375
8663
5585
1944
7971
2034
3446
6862
5166
3778
3596
6957
7237
6385
5212
6239
4079
9574
6590
8698
7201
8238
9338
2254
1789
8932
3267
7309
5914
6243
4509
5670
5743
9620
4980
1021
5045
9206
2550
3330
7932
1910
7229
8586
5901
4194
6533
8111
6485
8656
8550
9701
7826
8054
7863
3888
5260
4313
2904
5189
2853
5636
7455
2402
5946
3687
6384
9048
4178
8594
4289
4120
5905
7367
6704
3922
9084
7597
2994
3989
3484
5465
8203
3319
9474
3937
8860
5386
9822
5817
3369
2877
3242
5102
4979
9996
1253
8763
9203
9159
1509
8221
9023
8312
1302
6644
9648
1682
9244
2157
1263
7012
4150
9126
9961
2867
7457
1468
1151
9006
4370
5004
5784
3485
1202
7956
5920
7469
4855
2279
9563
7211
6298
6908
1960
6240
2594
1210
3038
7733
9952
2978
6305
5687
8998
4512
8175
7684
1328
7158
2436
4740
7485
4957
7065
6848
8403
7632
7205
4792
7621
9051
9171
2431
6062
8073
"""
    print("Part 2 answer:")
    print(solve1(input))
    inputExample = """
2
4
5
6
8
"""
    input = """
27747643
27378213
27991597
27413848
27310012
27994351
27246929
27861267
27615310
27745929
27844040
27413693
27676355
27379459
27788856
27548476
27075434
27935873
27457995
27632685
27457209
27406887
27130872
27538563
27279659
27042310
27448451
27692925
27434255
27525607
27383286
27729160
27738084
27761285
27453026
27541136
27014822
27893544
27769697
27625235
27914226
27255591
27980077
27651947
27718215
27849532
27287014
27740721
27710817
27051613
27535196
27027960
27510684
27286427
27437993
27769189
27562844
27293889
27799804
27272309
27443662
27604171
27447100
27264537
27546858
27142429
27547533
27253115
27669354
27416283
27438843
27604079
27059104
27796388
27941748
27798937
27038576
27609509
27631457
27727459
27703530
27129319
27714233
27291217
27765575
27740059
27625701
27686285
27548712
27088919
27959007
27290142
27317969
27423858
27605993
27510676
27260892
27290268
27905043
27336818
27073366
27349334
27609295
27200091
27450304
27006482
27309421
27310325
27345351
27203478
27360217
27972863
27769751
27545493
27867423
27307497
27375784
27585398
27260623
27898234
27157377
27502253
27811710
27153044
27424150
27096115
27542742
27731521
27093322
27118831
27598968
27658585
27371156
27489319
27698212
27577288
27909832
27533890
27167420
27044733
27932798
27050916
27560362
27239239
27081988
27337086
27394594
27044571
27509526
27768082
27030300
27068165
27627288
27820409
27337635
27662794
27982081
27590679
27750485
27479373
27726836
27221950
27988833
27988595
27829470
27888142
27291186
27272845
27892098
27716384
27809983
27905772
27402559
27795861
27008695
27398913
27011948
27315719
27948260
27898167
27547233
27761448
27498859
27335732
27001487
27806224
27905656
27078484
27249768
27961578
27453971
27560235
27200600
27892345
27101123
27458840
27691347
27864152
27803319
27539869
27103686
27843712
27807095
27556391
27306447
27677552
27119288
27128095
27353631
27282383
27206893
27091500
27214547
27216485
27327033
27794909
27946506
27135445
27927398
27375835
27149560
27687652
27998764
27214898
27344072
27688579
27078841
27727073
27808773
27053788
27691131
27833235
27896324
27611297
27166661
27543432
27118948
27855142
27127784
27278878
27673298
27963649
27361952
27266203
27652731
27927018
27500694
27036158
27999477
27613974
27966409
27061803
27433859
27486060
27901784
27268132
27300981
27789995
27688845
27690311
27180874
27012846
27976386
27512552
27379957
27159728
27564333
27196200
27286672
27703083
27932787
27171866
27975159
27380890
27452090
27681758
27590779
27517013
27043490
27803623
27356705
27306382
27072243
27289250
27394519
27944034
27220356
27703768
27068683
27232382
27955135
27646514
27048234
27038014
27703815
27141656
27382770
27485199
27800598
27643024
27399147
27997096
27141648
27465977
27518886
27966615
27776496
27136254
27079616
27168145
27676370
27004449
27174845
27512413
27115033
27227303
27153402
27253759
27444456
27884383
27913882
27165746
27491887
27849485
27384002
27505399
27258255
27948974
27235542
27688414
27854837
27131194
27477657
27714188
27874751
27637864
27761597
27428838
27214397
27686233
27441408
27004032
27190688
27458298
27202661
27599409
27253195
27907422
27432645
27337604
27825024
27268896
27259868
27422399
27218758
27127448
27864380
27059346
27482172
27478106
27553352
27353619
27114345
27850456
27147314
27681610
27373521
27600258
27931976
27879531
27166362
27196864
27611463
27977235
27734357
27582847
27671497
27859518
27167519
27158864
27234410
27050926
27449790
27080445
27548350
27380188
27373560
27908990
27769866
27359787
27745409
27600469
27531723
27759249
27716950
27472414
27992967
27703692
27168682
27941429
27956370
27000754
27860042
27306282
27534331
27008058
27006805
27459023
27613506
27481107
27681245
27389280
27698495
27708257
27604936
27490490
27547983
27018324
27573117
27282517
27259451
27748105
27790564
27195601
27367774
27432762
27268451
27964995
27338146
27586959
27871490
27240979
27480939
27396495
27309958
27001788
27459228
27907567
27675529
27323928
27213595
27788458
27393274
27288026
27037056
27927100
27055361
27183245
27062411
27658002
27964677
27748304
27632945
27193008
27758576
27817312
27652677
27955109
27352462
27798095
27529882
27129486
27123911
27313744
27332754
27179262
27087546
27500527
27082589
27215707
27415948
27448602
27803741
27365169
27131438
27159565
27648925
27280220
27961637
27240478
27497702
27379264
27822305
27224653
27271984
27588613
27343922
27839630
27282015
27932981
27599565
27867492
27650143
27228710
27566317
27032645
27197690
27801463
27469101
27578471
"""
    print("Part 3 answer:")
    print(solve3(input))


if __name__ == "__main__":
    main()
