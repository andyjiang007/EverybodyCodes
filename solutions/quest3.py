###
# Quest 3
# 11/17/2024
###
import copy


def solve1(input):
    result = 0
    char_array = [list(line) for line in input.split("\n") if line]
    curLevel = char_array
    numCol = len(curLevel[0])
    numRow = len(curLevel)
    while True:
        curCount = 0
        nextLevel = copy.deepcopy(curLevel)
        for i in range(numRow):
            for j in range(numCol):
                if curLevel[i][j] == "#":
                    curCount += 1
                    # print("Found " + str(i) + ", " + str(j))
                    if isEdge(curLevel, i, j):
                        # print("Is Edge")
                        nextLevel[i][j] = "."
        if curCount == 0:
            break
        result += curCount
        # print(result)
        # print(nextLevel)
        curLevel = copy.deepcopy(nextLevel)

    return result


def solve2(input):
    result = 0
    return result


def solve3(input):
    result = 0
    char_array = [list(line) for line in input.split("\n") if line]
    padded_array = [["."] * (len(char_array[0]) + 2)]  # Top padding
    for row in char_array:
        padded_array.append(
            ["."] + row + ["."]
        )  # Add '.' to the left and right of each row
    padded_array.append(["."] * (len(char_array[0]) + 2))  # Bottom padding

    curLevel = padded_array
    numCol = len(curLevel[0])
    numRow = len(curLevel)

    while True:
        curCount = 0
        nextLevel = copy.deepcopy(curLevel)
        for i in range(numRow):
            for j in range(numCol):
                if curLevel[i][j] == "#":
                    curCount += 1
                    # print("Found " + str(i) + ", " + str(j))
                    if isEdgeDiagonal(curLevel, i, j):
                        # print("Is Edge")
                        nextLevel[i][j] = "."
        if curCount == 0:
            break
        result += curCount
        # print(result)
        # print(nextLevel)
        curLevel = copy.deepcopy(nextLevel)

    return result


def isEdge(levelMap, i, j):
    numCol = len(levelMap[0])
    numRow = len(levelMap)
    directions = [(-1, 0), (1, 0), (0, -1), (0, 1)]
    for dx, dy in directions:
        newI = i + dx
        newJ = j + dy
        if (
            newI >= 0
            and newI < numRow
            and newJ >= 0
            and newJ < numCol
            and levelMap[newI][newJ] == "."
        ):
            return True
    return False


def isEdgeDiagonal(levelMap, i, j):
    numCol = len(levelMap[0])
    numRow = len(levelMap)
    directions = [(-1, 0), (1, 0), (-1, -1), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 1)]
    for dx, dy in directions:
        newI = i + dx
        newJ = j + dy
        if (
            newI >= 0
            and newI < numRow
            and newJ >= 0
            and newJ < numCol
            and levelMap[newI][newJ] == "."
        ):
            return True
    return False


def main():
    inputExample = """
..........
..###.##..
...####...
..######..
..######..
...####...
..........
"""
    input = """
..............................
..............................
...............#..............
............####..............
......#......###.###..........
.....####..########...........
.......###############........
.........#############........
.........############.........
...........#.###..##..........
..............##..............
..............##..............
..............................
..............................
"""
    print("Part 1 answer:")
    print(solve1(input))

    input = """
......................................................................
...............................................##.#...................
................................................####..................
........................................#.......###...................
.....................................#..#####.######..................
.....................................###############..................
............................##.......#################................
............................######.#################..................
...........................##########################.................
...........................########################...................
...........................#########################..................
.........................###########################..................
.........................#############################................
........................###############################...............
.......................##############################.................
....................##.##############################.................
.....................################################.................
....................###############..################.................
.....................##################################...............
....................###################################...............
....................##################################................
...................##.##############################..................
......................##############################..................
......................############################....................
......................####.#######################....................
.......................#...######################.....................
...........................#######################....................
.............................########.##########......................
..............................#######....#####........................
.............................########....#..#.........................
..............................##.#....................................
...............................#......................................
...............................#......................................
......................................................................
......................................................................
"""
    print("Part 2 answer:")
    print(solve1(input))

    input = """
##################.......................................................................................................#####################
#.################.......................................................................................................###################.#
##################...................................................#...................................................#####################
###################.................................................##....................................................####################
####################...............................................#.#.....##..##.#.....................................######################
#####################.............................................#####...############................................########################
######################............................................######..############................................##.#####################
######################..........................................##.#####################.##..............................#####################
#####################.......................................#...###########################..............................#####################
######################.................................##################################.###...........................######################
#################.###.................................#.######################################..........................######################
#################...................................###.####################################.#..............................##################
################....................................########################################.###............................##################
#################..................................########################################...##............................##################
#################.................................##########################################...............................###.###############
#############.####...............................###########################################..................................################
#########.###.####...............................########################################.#.....................................##############
#########..#...###...............................########################################.##.....................................####...######
####..#........##................................############################################......................................##.....####
#####...........#.................................###########################################...............................................##
#####............................................#############################################................................................
#####.........................................#######################################################.........................................
.................................................###################################################..........................................
.................................................####################......#########################..........................................
.................................................###################.######.#######################...........................................
...#.............................................##################.###..###.######################...........................................
...#.............................................##################.###..###.####################.............................................
...#............................................####################.######.######################............................................
...#............................................#####################......#########################..........................................
..####.........................................####################################################...........................................
#######........................................####################################################....................................##.....
#######..........................................#############################################.##......................................####.#.
.#########.......................................#############################################.#.......................................######.
########.........................................##############################################........................................#######
########..........................................##########################################.#....................................############
#########.......#.................................#########################################......................................#############
#########...#..###.#..............................#########################################......................................#############
########.##.##.######...................................#####################################...................................##############
###################...................................##################################.#####.................................###############
####################.#.................................####################.#################..............................###################
#######################................................####################.###################.............................##################
#######################.................................###################.####..####.#..#####.........................##.###################
#####################.##................................#####################.......##........#..........................#####################
###################...####..............................##.#####.##########.........##................................########################
####################..##......................................########.##.............................................########################
######################.........................................##.#.##.#..............................................########################
######################...........................................##....................................................#######################
#######################...............................................................................................########################
####################...................................................................................................#######################
####################..................................................................................................########################
#.######################.................................................................................................###################.#
########################................................................................................................######################
"""
    print("Part 3 answer:")
    print(solve3(input))


if __name__ == "__main__":
    main()
